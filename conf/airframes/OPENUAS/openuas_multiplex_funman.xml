<!DOCTYPE airframe SYSTEM "../airframe.dtd">
<airframe name="Funman">
  <description>
+ Airframe with Lisa MX 2.0 flightcontroller hardware
    + Model:       Multiplex Funman no fixed landing gear
    + Autopilot:   Lisa MX 2.0
    + Actuators:   Regular metal gear servos
    + GNSS         Ublox M8N GNSS
    + MAG          External QMC DB5883 Magnetometer on GNSS device
    + RCRX:        OpenRXSR Receiver
  </description>
  <firmware name="fixedwing">

    <target name="ap" board="lisa_mx_2.1">

      <configure name="PERIODIC_FREQUENCY" value="512"/> <!--  unit="Hz" -->
      <configure name="AHRS_PROPAGATE_FREQUENCY" value="500"/><!--  unit="Hz" -->
      <configure name="AHRS_CORRECT_FREQUENCY" value="500"/> <!--  unit="Hz" -->
      <configure name="AHRS_MAG_CORRECT_FREQUENCY" value="50"/><!-- best value unit="Hz" for ACTIVE magneto -->

      <configure name="NAVIGATION_FREQUENCY" value="16"/> <!--  unit="Hz" -->
      <configure name="CONTROL_FREQUENCY" value="120"/> <!--  unit="Hz" -->
      <!--<configure name="TELEMETRY_FREQUENCY" value="60"/--> <!--  unit="Hz" -->
      <configure name="MODULES_FREQUENCY" value="512"/> <!--  unit="Hz" -->

      <module name="imu" type="mpu9250_spi">
        <configure name="IMU_MPU9250_SPI_DEV" value="spi1"/>
        <configure name="IMU_MPU9250_SPI_SLAVE_IDX" value="SPI_SLAVE2"/>
        <define name="IMU_MPU9250_READ_MAG" value="FALSE"/>
      </module>

      <module name="gps" type="ubx_ucenter">
      </module>

      <!-- SBUS out is AETR by default, our transmitter sends TAER as per standard so correct in radio file -->
      <module name="radio_control" type="sbus"> <!-- The output type of RX, over the air it can can be all kinds e.g. DSMX, FRSky-->
        <define name="RADIO_CONTROL_NB_CHANNEL" value="16"/>  <!-- Set the OpenRXSR receiver to maximum channel output of 8 9ms -->
        <configure name="SBUS_PORT" value="UART5"/>
        <!-- Per default already GEAR if not defined  <define name="RADIO_MODE" value="RADIO_GEAR"/> --><!-- yes, already done by default if not redefined to something else-->
        <define name="RADIO_GEAR" value="RADIO_AUX2"/>
        <define name="RADIO_FLAP" value="RADIO_AUX3"/>
      </module>

      <module name="telemetry" type="transparent"/>

    </target>

    <!-- temp fix for geomag, normally only used for rotorcraft -->
    <define name="SENSOR_SYNC_SEND"/>

    <define name="AHRS_TRIGGERED_ATTITUDE_LOOP"/>
    <define name="USE_AHRS_GPS_ACCELERATIONS" value="TRUE"/> <!-- forward acceleration compensation from GPS speed -->
    <define name="USE_MAGNETOMETER_ONGROUND" value="TRUE"/> <!--DEFINE only used if float_dcm Use magnetic compensation before takeoff only while GPS course not good -->
   <!-- If AHRS_MAG_CORRECT_FREQUENCY is set outside of target no need USE_MAGNETOMETER it is assumed TRUE -->
    <configure name="USE_MAGNETOMETER" value="TRUE"/><!-- should be as in USE the device-->

<!-- ************************* MODULES ************************* -->
<!-- Warning: unit conversion does not work in this section of airframe, so use the native units, or you'll have trouble...-->

    <module name="gps" type="ublox">
      <configure name="GPS_BAUD" value="B57600"/>
      <!-- <configure name="GPS_PORT" value="UARTx"/>--><!-- Uses the default GPS port on pixracer no need to set it -->
    </module>

    <module name="ahrs" type="float_cmpl_quat"> <!-- Compare e.g. float_dcm -->
      <configure name="AHRS_USE_MAGNETOMETER" value="TRUE"/> <!-- as in USE it for values in the AHRS -->
      <configure name="AHRS_ALIGNER_LED" value="2"/><!-- Which color you want sir? ;) -->
      <define name="AHRS_MAG_UPDATE_ALL_AXES" value="TRUE"/> <!-- if TRUE with those high roll n pith angles magneto should be calibrated well or use UKF autocalib -->
      <define name="AHRS_USE_GPS_HEADING" value="FALSE"/><!-- TRUE by default Use GPS course to update heading for time being,if FALSE data from magneto only -->
      <!--<define name="AHRS_GRAVITY_UPDATE_COORDINATED_TURN" value="TRUE"/>--> <!--Already TRUE by default Compensation of centrifugal force via GPS speed (to fly in circles with a fixedwing)"-->
      <define name="AHRS_GPS_SPEED_IN_NEGATIVE_Z_DIRECTION" value="FALSE"/> <!-- AHRS_GRAVITY_UPDATE_COORDINATED_TURN assumes the GPS speed is in the X axis direction. Quadshot, DelftaCopter and other hybrids can have the GPS speed in the negative Z direction" -->
      <!--<define name="AHRS_PROPAGATE_LOW_PASS_RATES" value="TRUE"/>--> <!-- apply a low pass filter on rotational velocity"-->
      <!--<define name="AHRS_BIAS_UPDATE_HEADING_THRESHOLD" value="0.174533"/>--><!--unit="rad"/--><!-- don't update gyro bias if heading deviation is above this rotation threshold"-->
      <!--<define name="AHRS_HEADING_UPDATE_GPS_MIN_SPEED" value="3.0"/>--> <!--unit="m/s"--> <!-- CAREFULL,  Don't update heading from GPS course if GPS ground speed is below is this threshold in m/s" -->
      <!-- Some insights https://lists.nongnu.org/archive/html/paparazzi-devel/2013-10/msg00126.html -->
      <define name="AHRS_GRAVITY_HEURISTIC_FACTOR" value="0.0"/> <!-- TODO: determine Default is 30.0 Reduce accelerometer cut-off frequency when the vehicle is accelerating: norm(ax,ay,az) 9,81 m/s2. WARNING: when the IMU is not well damped, the norm of accelerometers never equals to 9,81 m/s2. As a result, the GRAVITY_HEURISTIC_FACTOR will reduce the accelerometer bandwith even if the vehicle is not accelerating. -->
      <!--<define name="AHRS_FC_IMU_ID" value="ABI_BROADCAST"/>--> <!-- ABI sender id of IMU to use Change is you change your AHRS type -->
      <!--<define name="AHRS_FC_MAG_ID" value="MAG_HMC58XX_SENDER_ID"/>--><!-- MAG_CALIB_UKF_ID for when using the mag_clib_ukf  change your AHRS type-->
      <define name="AHRS_FC_MAG_ID" value="MAG_QMC5883_SENDER_ID" /><!-- Use this insted of MAG_HMC5883_SENDER_ID for alternative sensor -->
    </module>

    <module name="ins" type="alt_float">
    </module>

    <module name="control"/>
    <module name="navigation"/>
    <module name="geo_mag"/>

    <!-- external mag for better heading estimate
    uses the magnetometor that is available on the GPS board
    Thi one is temperature compensated and furtherest away from all other devices
    so less influence (still to measure raw mag values to check this though )
    In case we where sloppy builing in the GPS+mag combo, ..we always are ;)
    we nead to compensate this a bit e.g. the pitch
    our luck at least the tree axis are aligned already in hardware :) -->
    <!--<module name="mag" type="hmc58xx">-->
   <!-- <define name="MAG_TO_IMU_THETA" value="6" unit="deg"/>-->
      <!--<define name="HMC58XX_STARTUP_DELAY" value="1.4"/>--><!-- If you mag somehow does not work, Enable this line, and maybe even change it to a higher value if it still does not work e.g. 1.9 -->
      <!--<configure name="MAG_HMC58XX_I2C_DEV" value="i2c1"/>-->
      <!--<define name="MODULE_HMC58XX_SYNC_SEND" value="TRUE"/>--><!-- temporary for debugging external magneto and setup orientation sign and Body to Magneto angles-->
      <!--<define name="MODULE_HMC58XX_UPDATE_AHRS" value="TRUE"/>--> <!-- When all calib and works to TRUE -->
     <!--
      <define name="HMC58XX_CHAN_X" value="1"/>
      <define name="HMC58XX_CHAN_Y" value="0"/>
      <define name="HMC58XX_CHAN_Z" value="2"/>
      <define name="HMC58XX_CHAN_X_SIGN" value="-"/>
      <define name="HMC58XX_CHAN_Y_SIGN" value="+"/>
      <define name="HMC58XX_CHAN_Z_SIGN" value="+"/>
    </module> -->

    <!-- To get the signs (and channels) right, show a realtime plot scaled IMU_MAG mx, my, mz then:

    - [x] When you align your IMU with the direction of north, you should see x>0, y=~0, z>0.

    - [x] When pitching the IMU down, the magnetic vector is aligning with x,
          so x should increase and z should decrease to zero.

    - [x] If yawing your IMU to the left, the magnetic vector is aligning with y,
          so y should be positive and increase, x should decrease to zero and z stay positive.
-->
    <!-- In case you have magnetometer+gnss combo with a differrent chip than advertised use the one below
    Could be that this driver is not yet in your branch ATM -->
    <module name="mag" type="qmc5883">
      <configure name="MAG_QMC5883_I2C_DEV" value="i2c2"/>
      <define name="MODULE_QMC5883_SYNC_SEND" value="TRUE"/>
      <!--<define name="MODULE_QMC5883_UPDATE_AHRS" value="TRUE"/>-->
      <define name="QMC5883_CHAN_X" value="1"/>
      <define name="QMC5883_CHAN_Y" value="0"/>
      <define name="QMC5883_CHAN_Z" value="2"/>
      <define name="QMC5883_CHAN_X_SIGN" value="-"/>
      <define name="QMC5883_CHAN_Y_SIGN" value="+"/>
      <define name="QMC5883_CHAN_Z_SIGN" value="+"/>
    </module>

  </firmware>

  <!-- Rotation between sensor frame and IMU frame of this airframe external magnetometer -->
  <!--If you build in your GPS where the MAGNETOMETER resides on the board
      not alligned with the Accelo/Gyro axis or the main IMU on flight controller then set these values-->
  <!-- Rotation between sensor frame and IMU frame of another airframe external magnetometer -->
  <section name="MAG_QMC" prefix="QMC5883_">
      <define name="MAG_TO_IMU_PHI" value="0.0"/>
      <define name="MAG_TO_IMU_THETA" value="0.0"/>
      <define name="MAG_TO_IMU_PSI" value="0.0"/>
  </section>

  <servos>
    <servo name="S_THROTTLE" no="0" min="1265" neutral="1275" max="1820"/>
    <servo name="S_AILERON_LEFT" no="1" min="1900" neutral="1460" max="1100"/>
    <servo name="S_ELEVATOR" no="2" min="1900" neutral="1440" max="1100"/>
    <servo name="S_RUDDER" no="3" min="1100" neutral="1520" max="1900"/>
    <servo name="S_AILERON_RIGHT" no="4" min="1900" neutral="1460" max="1100"/>
  </servos>

  <command_laws>
    <set servo="S_THROTTLE" value="@THROTTLE"/>
    <set servo="S_AILERON_LEFT" value="@ROLL"/>
    <set servo="S_AILERON_RIGHT" value="@ROLL"/>
    <set servo="S_ELEVATOR" value="@PITCH"/>
    <set servo="S_RUDDER" value="@YAW"/>
  </command_laws>

  <rc_commands>
    <set command="THROTTLE" value="@THROTTLE"/>
    <set command="ROLL" value="@ROLL"/>
    <set command="PITCH" value="@PITCH"/>
    <set command="YAW" value="@YAW"/>
  </rc_commands>

  <commands>
    <axis name="THROTTLE" failsafe_value="0"/>
    <axis name="ROLL" failsafe_value="5"/>
    <axis name="PITCH" failsafe_value="-6"/>
    <axis name="YAW" failsafe_value="0"/>
  </commands>

  <section name="AUTO1" prefix="AUTO1_">
    <define name="MAX_ROLL" value="60" unit="deg"/>
    <define name="MAX_PITCH" value="55" unit="deg"/>
  </section>

  <section name="FAILSAFE" prefix="FAILSAFE_">
    <define name="DEFAULT_THROTTLE" value="0.0" unit="%"/>
    <define name="DEFAULT_GEAR" value="1100"/>
    <define name="DEFAULT_ROLL" value="10.0" unit="deg"/>
    <define name="DEFAULT_PITCH" value="-5.0" unit="deg"/>
  </section>

  <section name="IMU" prefix="IMU_">

    <!-- ***************** GYRO *****************-->
    <!-- <define name="GYRO_P_SENS" value=" 1.01" integer="16"/> -->
    <!-- <define name="GYRO_Q_SENS" value=" 1.01" integer="16"/> -->
    <!-- <define name="GYRO_R_SENS" value=" 1.01" integer="16"/> -->
    <!-- <define name="GYRO_P_NEUTRAL" value="0"/> -->
    <!-- <define name="GYRO_Q_NEUTRAL" value="0"/> -->
    <!-- <define name="GYRO_R_NEUTRAL" value="0"/> -->

    <!-- *****************ACCELLOMETER *****************-->
    <!-- Replace these values with your own calibration, on the correct sensor -->

  <!-- calib on 20200414 -->
    <!--
    <define name="ACCEL_X_NEUTRAL" value="-86"/>
    <define name="ACCEL_Y_NEUTRAL" value="104"/>
    <define name="ACCEL_Z_NEUTRAL" value="56"/>-->
    <define name="ACCEL_X_NEUTRAL" value="0"/>
    <define name="ACCEL_Y_NEUTRAL" value="0"/>
    <define name="ACCEL_Z_NEUTRAL" value="0"/>
    <define name="ACCEL_X_SENS" value="2.44717990354" integer="16"/>
    <define name="ACCEL_Y_SENS" value="2.41787653186" integer="16"/>
    <define name="ACCEL_Z_SENS" value="2.4425224747" integer="16"/>

    <!-- For now we swapped axis this is also a posibility -->

    <define name="BODY_TO_IMU_PHI" value="-1.8" unit="deg"/>
    <define name="BODY_TO_IMU_THETA" value="3.2" unit="deg"/>
    <define name="BODY_TO_IMU_PSI" value="0.0" unit="deg"/>

     <!-- ***************** MAGNETOMETER *****************-->

<!--
Calibrating the Magnetometer

First of all it is important to know that all ferromagnetic materials near the mag distort the measurements.
So preferably you do the mag calibration with the mag/autopilot mounted in your frame and as far away from metal and magnets as possible.
Calibrating for the Earth magnetic field

The most crucial part for the magnetometer calibration:

1) Stop Server, start server, creates new log file we need for calibration
2) Slowly spin your aircraft around all axes round a minute or so...
3) Stop the server so it will write the log file
4) Run a Calibartion calculation script to get your calibration coefficients:

 sw/tools/calibration/calibrate.py -s MAG var/logs/YY_MM_DD__hh_mm_ss.data -vp

 ( Where YY_MM_DD__hh_mm_ss.data is the name of the log data file that was just generated.)

5) Paste the results below (CTRL+SHIFT+C to copy form terminal) overwriteing
6) Save, rebuild and upload... Done!
-->

<!-- If using the external magnetometer on GPS -->
 <!--<define name="MAG_X_SIGN" value="1"/>
    <define name="MAG_Y_SIGN" value="-1"/>
    <define name="MAG_Z_SIGN" value="-1"/>-->

  <!-- The external QMC5883 TODO calib  -->
    <define name="MAG_X_NEUTRAL" value="0"/>
    <define name="MAG_Y_NEUTRAL" value="0"/>
    <define name="MAG_Z_NEUTRAL" value="0"/>
    <define name="MAG_X_SENS" value="4.2" integer="16"/>
    <define name="MAG_Y_SENS" value="4.2" integer="16"/>
    <define name="MAG_Z_SENS" value="4.2" integer="16"/>

    <!-- Current compensation for the magentometer currently IN USE -->
    <!-- No Calib -->
    <define name="MAG_X_CURRENT_COEF" value="0"/>
    <define name="MAG_Y_CURRENT_COEF" value="0"/>
    <define name="MAG_Z_CURRENT_COEF" value="0"/>

    <!--define name="MAG_OFFSET" value="-?.0" unit="deg"--> <!--  TODO: at least 3 axis in worst case -->

  </section>

  <section name="AHRS" prefix="AHRS_">
    <define name="H_X" value="0.402784"/>
    <define name="H_Y" value="0.018355"/>
    <define name="H_Z" value="0.915111"/>
  </section>

  <section name="INS"> <!-- prefix="INS_"> -->
    <!--  For those super precice target landings ;) well better build in a uBLox M8P-->
    <define name="INS_BODY_TO_GPS_X" value="0.09" unit="m"/>
    <define name="INS_BODY_TO_GPS_Y" value="0.0" unit="m"/>
    <define name="INS_BODY_TO_GPS_Z" value="0.15" unit="m"/>

    <define name="ROLL_NEUTRAL_DEFAULT" value="0." unit="deg"/>
    <define name="PITCH_NEUTRAL_DEFAULT" value="0." unit="deg"/><!-- not taken into account -->

    <define name="USE_GPS_ALT" value="TRUE"/>
    <define name="VFF_R_GPS" value="0.02"/>
  </section>

  <section name="HORIZONTAL CONTROL" prefix="H_CTL_">

     <define name="COURSE_PGAIN" value="0.8"/>
     <define name="COURSE_DGAIN" value="0.02"/>
     <define name="COURSE_TAU" value="0.7"/>

    <define name="COURSE_PRE_BANK_CORRECTION" value="0.99"/>

    <define name="ROLL_MAX_SETPOINT" value="35" unit="deg"/>
    <define name="PITCH_MAX_SETPOINT" value="40" unit="deg"/>
    <define name="PITCH_MIN_SETPOINT" value="-40" unit="deg"/>

    <define name="PITCH_PGAIN" value="6000"/>
    <define name="PITCH_DGAIN" value="80"/>
    <define name="PITCH_IGAIN" value="2"/>
    <define name="PITCH_KFFA" value="20."/>
    <define name="PITCH_KFFD" value="4."/>

    <define name="ELEVATOR_OF_ROLL" value="1550" unit="PPRZ_MAX"/>
    <define name="ROLL_SLEW" value="0.3"/>
    <define name="ROLL_ATTITUDE_GAIN" value="9000."/>
    <define name="ROLL_RATE_GAIN" value="400."/>
    <define name="ROLL_IGAIN" value="100."/>
    <define name="ROLL_KFFA" value="100"/>
    <define name="ROLL_KFFD" value="10"/>

    <define name="AILERON_OF_THROTTLE" value="0.0"/>

  </section>

<!-- ****************************** V ****************************** -->
  <section name="VERTICAL CONTROL" prefix="V_CTL_">
    <!-- power -->
    <define name="POWER_CTL_BAT_NOMINAL" value="11.7" unit="volt"/>

    <!-- Classic -->
    <!-- outer loop proportional gain -->
    <define name="ALTITUDE_PGAIN" value="0.05"/> <!--unit="(m/s)/m"-->
    <!-- disable climb rate limiter -->
    <define name="AUTO_CLIMB_LIMIT" value="1.7*V_CTL_ALTITUDE_MAX_CLIMB"/>
    <!-- auto throttle -->
    <!-- Cruise throttle + limits -->
    <define name="AUTO_THROTTLE_MIN_CRUISE_THROTTLE" value="0.45" unit="%"/>  <!-- TODO: Determine -->
    <define name="AUTO_THROTTLE_NOMINAL_CRUISE_THROTTLE" value="0.6" unit="%"/> <!-- TODO: Determine -->
    <define name="AUTO_THROTTLE_MAX_CRUISE_THROTTLE" value="0.85" unit="%"/>

    <define name="AUTO_THROTTLE_LOITER_TRIM" value="1000" unit="pprz_t"/>
    <define name="AUTO_THROTTLE_DASH_TRIM" value="-2000" unit="pprz_t"/>

    <define name="AUTO_THROTTLE_CLIMB_THROTTLE_INCREMENT" value="0.04" unit="%/(m/s)"/> <!-- TODO: Determine -->

    <!-- Climb loop (throttle) -->
    <define name="AUTO_THROTTLE_PGAIN" value="0.01" unit="%/(m/s)"/>
    <define name="AUTO_THROTTLE_IGAIN" value="0.001"/>
    <define name="AUTO_THROTTLE_DGAIN" value="0.001"/>
    <define name="AUTO_THROTTLE_PITCH_OF_VZ_PGAIN" value="0.01" unit="rad/(m/s)"/> <!-- TODO: Determine -->
    <define name="AUTO_THROTTLE_NOMINAL_CRUISE_PITCH" value="0." unit="rad"/> <!-- default 0 -->

    <define name="THROTTLE_SLEW_LIMITER" value="0.8" unit="m/s/s"/>  <!-- Limiter for e.g. a powerful motor -->

    <!-- airspeed control -->
    <!-- Best to never set AUTO_AIRSPEED_SETPOINT lower than airframe stall speed if you hate repairs ;) -->
    <!-- investigate: howto if higher then _AIRSPEED_SETPOINT then airframe tries to maintain a constand ground speed UNKNOWN -->
    <define name="AUTO_AIRSPEED_SETPOINT" value="12.0" unit="m/s"/>
    <define name="AUTO_AIRSPEED_THROTTLE_PGAIN" value="0.07" unit="%/(m/s)"/>
    <define name="AUTO_AIRSPEED_THROTTLE_DGAIN" value="0.06"/>
    <define name="AUTO_AIRSPEED_THROTTLE_IGAIN" value="0.002"/>
    <define name="AUTO_AIRSPEED_PITCH_PGAIN" value="0.12" unit="degree/(m/s)"/>
    <define name="AUTO_AIRSPEED_PITCH_DGAIN" value="0.001"/>
    <define name="AUTO_AIRSPEED_PITCH_IGAIN" value="0.02"/>

    <define name="AIRSPEED_MAX" value="18.0" unit="m/s"/>
    <define name="AIRSPEED_MIN" value="7.0" unit="m/s"/>

    <!-- pitch trim -->
    <define name="PITCH_LOITER_TRIM" value="0.5" unit="deg"/> <!-- Non ETECS -->
    <define name="PITCH_DASH_TRIM" value="0." unit="deg"/> <!-- Non ETECS -->

    <!-- groundspeed control -->
    <define name="AUTO_GROUNDSPEED_SETPOINT" value="6.0" unit="m/s"/>
    <define name="AUTO_GROUNDSPEED_PGAIN" value="0.8"/>
    <define name="AUTO_GROUNDSPEED_IGAIN" value="0.2"/>

    <define name="AIRSPEED_PGAIN" value="0.15"/>

    <!-- Only for control classic as in not new or enegry etc.-->
    <define name="AUTO_AIRSPEED_PGAIN" value="0.18" unit="%/(m/s)"/>
    <define name="AUTO_AIRSPEED_IGAIN" value="0.2"/>

    <define name="ALTITUDE_MAX_CLIMB" value="2.0" unit="m/s"/>
    <define name="MAX_ACCELERATION" value="1.6" unit="G"/>

    <define name="AUTO_PITCH_PGAIN" value="0.015"/>
    <define name="AUTO_PITCH_DGAIN" value="0.01"/>
    <define name="AUTO_PITCH_IGAIN" value="0.001"/>
    <define name="AUTO_PITCH_MAX_PITCH" value="30" unit="deg"/>
    <define name="AUTO_PITCH_MIN_PITCH" value="-30" unit="deg"/>
  </section>

  <section name="BAT">
    <define name="MAX_BAT_CAPACITY" value="900" unit="mAh"/>
    <define name="MILLIAMP_AT_IDLE_THROTTLE" value="60" unit="mA"/>
    <define name="MILLIAMP_AT_FULL_THROTTLE" value="10600" unit="mA"/>
    <define name="MAX_BAT_LEVEL" value="8.4" unit="V"/>
    <define name="LOW_BAT_LEVEL" value="7.0" unit="V"/>
    <define name="CRITIC_BAT_LEVEL" value="6.3" unit="V"/>
    <define name="CATASTROPHIC_BAT_LEVEL" value="6.0" unit="V"/>
  </section>

  <section name="MISC">
    <define name="CARROT" value="4." unit="s"/>
    <define name="MINIMUM_AIRSPEED" value="9." unit="m/s"/>
    <define name="NOMINAL_AIRSPEED" value="12." unit="m/s"/>
    <define name="MAXIMUM_AIRSPEED" value="20." unit="m/s"/>
    <define name="DEFAULT_CIRCLE_RADIUS" value="100." unit="m"/>
    <define name="HOME_RADIUS" value="DEFAULT_CIRCLE_RADIUS" unit="m"/>
    <define name="UNLOCKED_HOME_MODE" value="TRUE"/>
    <define name="RC_LOST_MODE" value="AP_MODE_AUTO2"/>
  </section>

  <section name="GCS">
    <define name="SPEECH_NAME" value="Funman"/>
    <define name="AC_ICON" value="fixedwing"/>
  </section>

</airframe>
