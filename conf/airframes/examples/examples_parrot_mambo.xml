<!DOCTYPE airframe SYSTEM "../airframe.dtd">

<!-- The Parrot Mambo airframe comes with four brushed motors in an X configuration. -->

<!--
     The motor and rotor configuration is the following:

	   Front
             ^
             |

    Motor3(NW)  Motor0(NE)
        CW      CCW
          \     /
           ,___,
           |   |
           |   |
           |___|
          /     \
        CCW      CW
     Motor2(SW)  Motor1(SE)
     
-->

<airframe name="Parrot_Mambo">

  <firmware name="rotorcraft">
    <configure name="PREFIX" value="/opt/arm-2012.03/bin/arm-none-linux-gnueabi"/>

    <target name="ap" board="parrot_minidrone">
    <!--  TODO: After first flights try to find optimum value -->
      <!-- PERIODIC_FREQUENCY should be least equal or greater than AHRS_PROPAGATE_FREQUENCY -->
      <configure name="PERIODIC_FREQUENCY" value="512"/> <!--  unit="Hz" -->

      <!--<configure name="AHRS_PROPAGATE_FREQUENCY" value="500"/>--><!--  unit="Hz" -->
      <!--<configure name="AHRS_CORRECT_FREQUENCY" value="500"/> <!--  unit="Hz" -->
      
      <!-- <configure name="NAVIGATION_FREQUENCY" value="16"/>
      <configure name="CONTROL_FREQUENCY" value="120"/>
      <configure name="TELEMETRY_FREQUENCY" value="60"/>
      <configure name="MODULES_FREQUENCY" value="512"/>-->
      
      <!--<define name="USE_PERSISTENT_SETTINGS" value="TRUE"/>-->
      <define name="BAT_CHECKER_DELAY" value="50"/>
      <!-- amount of time it take for the bat to check -->
      <!-- to avoid bat low spike detection when strong up movement withch draws short sudden power-->
      <define name="CATASTROPHIC_BATTERY_KILL_DELAY" value="50"/><!-- in seconds-->
      
      
     <!--  <define name="PARROT_MINIDRONE_LOWPASS_FILTER" value="MPU60X0_DLPF_256HZ"/>
      <define name="PARROT_MINIDRONE_SMPLRT_DIV" value="3"/>
      
      <define name="PARROT_MINIDRONE_GYRO_RANGE" value="MPU60X0_GYRO_RANGE_1000"/>
      <define name="PARROT_MINIDRONE_ACCEL_RANGE" value="MPU60X0_ACCEL_RANGE_16G"/>-->
    </target>

    <target name="nps" board="pc">
      <module name="fdm" type="jsbsim"/>
      <define name="JSBSIM_MODEL" value="simple_x_quad_ccw" type="string"/>
      <define name="SENSORS_PARAMS" value="nps_sensors_params_default.h" type="string"/>
    </target>

    <!-- debugging -->
    <!--  <define name="ACTUATORS_PARROT_MINIDRONE_DEBUG" value="TRUE"/>-->
    
    <define name="USE_SONAR" value="0"/>
    <define name="USE_BARO" value="0"/>
    <configure name="USE_MAGNETOMETER" value="0"/>

    <module name="radio_control" type="datalink"/>
    <module name="telemetry" type="transparent_udp"/>
    <module name="motor_mixing"/>
    <module name="actuators" type="parrot_minidrone"/>
    <module name="imu" type="parrot_minidrone"/>
      
    <module name="gps" type="datalink"/> <!-- For Optitrack or comparable systems -->

     <!--    <module name="gps" type="ublox"> -->
    <!--
      <configure name="GPS_BAUD" value="B57600"/>
      <configure name="GPS_PORT" value="UART2"/>
      -->
    <!--  </module>-->
    <!-- via the microusb on backside connected via an UsB to serial cable -->
    <module name="stabilization" type="int_quat"/>
    <module name="ahrs"          type="int_cmpl_quat">
        <!--  <configure name="AHRS_USE_MAGNETOMETER" value="FALSE"/>--> <!-- First autoflight set to false better make sure it works and is callibrated if set to TRUE -->
        <!--  <configure name="AHRS_ALIGNER_LED" value="2"/>-->
     	<!--  <define name="AHRS_USE_GPS_HEADING" value="TRUE"/>--><!-- Use GPS course to update heading for time being,if FALSE data from magneto only, testing, brrrr... -->
     	<!-- <define name="AHRS_GRAVITY_UPDATE_COORDINATED_TURN" value="FALSE"/>--> <!-- Compensation of centrifugal force via GPS speed (to fly in circles with a fixedwing)"-->
     	<!--  <define name="AHRS_GPS_SPEED_IN_NEGATIVE_Z_DIRECTION" value="FALSE"/> <!-- AHRS_GRAVITY_UPDATE_COORDINATED_TURN assumes the GPS speed is in the X axis direction. Quadshot, DelftaCopter and other hybrids can have the GPS speed in the negative Z direction" -->
     	<!--  <define name="AHRS_PROPAGATE_LOW_PASS_RATES" value="TRUE"/>--> <!-- apply a low pass filter on rotational velocity"-->
     	<!-- <define name="AHRS_BIAS_UPDATE_HEADING_THRESHOLD" value="5.0"/>--> <!-- don't update gyro bias if heading deviation is above this threshold in degrees"-->
     	<!--  <define name="AHRS_HEADING_UPDATE_GPS_MIN_SPEED" value="0.0"/>--> <!-- CAREFULL,  Don't update heading from GPS course if GPS ground speed is below is this threshold in m/s" -->
  <!-- Some insights https://lists.nongnu.org/archive/html/paparazzi-devel/2013-10/msg00126.html -->
     	<!-- <define name="AHRS_GRAVITY_HEURISTIC_FACTOR" value="30.0"/>--> <!-- Default is 30. Reduce accelerometer cut-off frequency when the vehicle is accelerating: norm(ax,ay,az) 9,81 m/s2. WARNING: when the IMU is not well damped, the norm of accelerometers never equals to 9,81 m/s2. As a result, the GRAVITY_HEURISTIC_FACTOR will reduce the accelerometer bandwith even if the vehicle is not accelerating. Set to 0 in case of vibrations -->
    </module>
   
    <module name="ins"           type="extended"/>
  </firmware>
    
    
  <modules main_freq="512">
    <module name="air_data"/>
   <!--  <module name="send_imu_mag_current"/>--> <!-- if using external mag -->
    
   <!-- <module name="gps" type="ubx_ucenter"/>-->
   <!-- <module name="geo_mag"/>-->

   <!--  <module name="logger_file">
      <define name="FILE_LOGGER_PATH" value="/data/edu"/>
    </module> -->
      
    <module name="video_thread">
      <!-- <define name="VIDEO_FILTER_DEBAYER" value="0"/>-->
      <define name="VIDEO_THREAD_MAX_CAMERAS" value="1"/>
      <!--  <define name="VIDEO_THREAD_NICE_LEVEL" value="5"/>-->
      <!-- <define name="SYS_TIME_THREAD_PRIO" value="2"/>-->
    </module>

   <!--   <module name="cv_colorfilter">
     <define name="COLORFILTER_CAMERA" value="bottom_camera"/>
    </module>-->
    
   <!--  <module name="video_rtp_stream">
       <!--  <define name="VIEWVIDEO_DEVICE" value="/dev/video0"/>
      <define name="VIEWVIDEO_SUBDEV" value="/dev/v4l-subdev0"/>-->
      
      <!--  <define name="VIEWVIDEO_NICE_LEVEL" value="0"/>-->
      
      <!--  <define name="VIEWVIDEO_CAMERA" value="bottom_camera"/>
      <define name="VIEWVIDEO_DOWNSIZE_FACTOR" value="4"/>
      <define name="VIEWVIDEO_QUALITY_FACTOR" value="40"/>
      <define name="VIEWVIDEO_DEVICE_BUFFERS" value="1"/>-->
      
      
      <!-- <define name="VIEWVIDEO_DEVICE_SIZE" value="320,240"/>-->

      <!--  <configure name="VIEWVIDEO_HOST" value="192.168.3.2" />
      <configure name="VIEWVIDEO_BROADCAST" value="FALSE" />
      
      <define name="VIEWVIDEO_FPS" value="1" />

      <define name="VIEWVIDEO_STREAM_VIDEO" value="FALSE" />
      <define name="VIEWVIDEO_SHOT_PATH" value="/data/edu/paparazzi"/>
      <define name="VIEWVIDEO_VIDEO_FILE" value="DoTheMambo" />
      <define name="VIEWVIDEO_WRITE_VIDEO" value="FALSE" />
    </module>-->
    
    <!--<module name="video_usb_logger"/>
      <define name="LOG_ON_USB" value="TRUE"/>-->
      <!-- if one wants to log on e.g. USB stick stuffed into your Parrot Bebop, not possible with Parrot Minidrones -->
      <!-- <define name="VIDEO_USB_LOGGER_PATH" value="/data/video/usb0/myphotologs"/>
    </module>-->
    
    <module name="video_capture">
      <define name="VIDEO_CAPTURE_CAMERA" value="bottom_camera"/>
      <define name="VIDEO_CAPTURE_PATH" value="/data/edu/paparazzi"/>
      <define name="VIDEO_CAPTURE_JPEG_QUALITY" value="45"/>
    </module>
    
    <!--  
    <module name="pose_history">
    </module>
    
    <module name="cv_opticflow">
      <define name="OPTICFLOW_CAMERA" value="bottom_camera"/>
    </module>
    <module name="opticflow_hover"/-->

  </modules>
   
  <commands>
    <axis name="PITCH"  failsafe_value="0"/>
    <axis name="ROLL"   failsafe_value="0"/>
    <axis name="YAW"    failsafe_value="0"/>
    <axis name="THRUST" failsafe_value="1000"/>
  </commands>

  <servos>
    <servo name="TOP_LEFT"      no="2" min="0" neutral="15" max="511"/>
    <servo name="TOP_RIGHT"     no="0" min="0" neutral="15" max="511"/>
    <servo name="BOTTOM_RIGHT"  no="1" min="0" neutral="15" max="511"/>
    <servo name="BOTTOM_LEFT"   no="3" min="0" neutral="15" max="511"/>
  </servos>

  <section name="MIXING" prefix="MOTOR_MIXING_">
    <define name="TRIM_ROLL" value="0"/>
    <define name="TRIM_PITCH" value="0"/>
    <define name="TRIM_YAW" value="0"/>

    <!-- Time cross layout (X), with order NW (CW), NE (CCW), SE (CW), SW (CCW) -->
    <define name="TYPE" value="QUAD_X"/>

    <!--  <define name="NB_MOTOR" value="4"/>
    <define name="SCALE" value="256"/>-->
    <define name="MAX_SATURATION_OFFSET" value="3*MAX_PPRZ"/><!-- TODO: Check -->
<!--  
    <define name="ROLL_COEF" value="{  -256, -256,  256,  256 }"/>
    <define name="PITCH_COEF" value="{  256, -256,  256, -256 }"/>
    <define name="YAW_COEF" value="{    256, -256,  256, -256 }"/>
    <define name="THRUST_COEF" value="{ 256,  256,  256,  256 }"/>-->
  </section>
  
  <!--  ------------------- -->
  
  <!-- from TOP_LEFT clockwise to BOTTOM_LEFT -->
  <!-- <command_laws>
    <call fun="motor_mixing_run(autopilot_get_motors_on(),FALSE,values)"/>
    <set servo="TOP_LEFT"     value="motor_mixing.commands[2]"/>
    <set servo="TOP_RIGHT"    value="motor_mixing.commands[0]"/>
    <set servo="BOTTOM_RIGHT" value="motor_mixing.commands[1]"/>
    <set servo="BOTTOM_LEFT"  value="motor_mixing.commands[3]"/>
  </command_laws> -->
  <command_laws>
    <call fun="motor_mixing_run(autopilot_get_motors_on(),FALSE,values)"/>
    <set servo="TOP_LEFT" value="motor_mixing.commands[MOTOR_FRONT_LEFT]"/>
    <set servo="TOP_RIGHT" value="motor_mixing.commands[MOTOR_FRONT_RIGHT]"/>
    <set servo="BOTTOM_RIGHT" value="motor_mixing.commands[MOTOR_BACK_RIGHT]"/>
    <set servo="BOTTOM_LEFT" value="motor_mixing.commands[MOTOR_BACK_LEFT]"/>
  </command_laws>

  <section name="AIR_DATA" prefix="AIR_DATA_">
    <define name="CALC_AIRSPEED" value="FALSE"/>
    <define name="CALC_TAS_FACTOR" value="FALSE"/>
    <define name="CALC_AMSL_BARO" value="TRUE"/>
  </section>

  <section name="IMU" prefix="IMU_">
    <!-- Magneto calibration to perform for your own minidrone-->
    <define name="MAG_X_NEUTRAL" value="0"/>
    <define name="MAG_Y_NEUTRAL" value="0"/>
    <define name="MAG_Z_NEUTRAL" value="0"/>
    <define name="MAG_X_SENS" value="11.0" integer="16"/>
    <define name="MAG_Y_SENS" value="11.0" integer="16"/>
    <define name="MAG_Z_SENS" value="11.0" integer="16"/>

    <define name="BODY_TO_IMU_PHI" value="0." unit="deg"/>
    <define name="BODY_TO_IMU_THETA" value="0." unit="deg"/>
    <define name="BODY_TO_IMU_PSI" value="0." unit="deg"/>
      
     <!-- TODO Magneto current calibration , should be about same for all Mambo Airframes-->
    <define name="MAG_X_CURRENT_COEF" value="0.0"/>
    <define name="MAG_Y_CURRENT_COEF" value="0.0"/>
    <define name="MAG_Z_CURRENT_COEF" value="0.0"/>
  </section>

  <!-- local magnetic field -->
  <!-- http://wiki.paparazziuav.org/wiki/Subsystem/ahrs#Local_Magnetic_Field -->
  <section name="AHRS" prefix="AHRS_">
    <!-- Local Magnetic field NL Testfield-->   
     <define name="H_X" value="0.382478"/>
     <define name="H_Y" value="0.00563406"/>
     <define name="H_Z" value="0.923948"/>
    <!-- Local Magnetic field DE Testfield 
    <define name="H_X" value="0.403896"/>
    <define name="H_Y" value="0.012277"/>
    <define name="H_Z" value="0.914723"/>-->
       <!-- Use GPS heading instead of magneto for in Optitrack flights this is possible even without XY movement -->
    <define name="USE_GPS_HEADING" value="1"/>
    <define name="HEADING_UPDATE_GPS_MIN_SPEED" value="0"/>
  </section>

  <section name="INS" prefix="INS_">
    <define name="SONAR_MAX_RANGE" value="3.0"/>
    <define name="SONAR_UPDATE_ON_AGL" value="TRUE"/>
    <!-- Use GPS altitude measurments and set the R gain -->
    <!--  for Optitrack flight -->
    <define name="USE_GPS_ALT" value="1"/>
    <define name="VFF_R_GPS" value="0.01"/>
  </section>

  <!-- setpoint limits for attitude stabilization rc flight -->
  <!-- <section name="RC_SETPOINT" prefix="STABILIZATION_ATTITUDE_">
    <define name="SP_MAX_PHI" value="25" unit="deg"/>
    <define name="SP_MAX_THETA" value="25" unit="deg"/>
    <define name="SP_MAX_R" value="180" unit="deg/s"/>
    <define name="DEADBAND_A" value="0"/>
    <define name="DEADBAND_E" value="0"/>
    <define name="DEADBAND_R" value="150"/>
  </section>-->
  
  
   <section name="STABILIZATION_RATE" prefix="STABILIZATION_RATE_">
    <!-- setpoints -->
    <define name="SP_MAX_P" value="10000"/>
    <define name="SP_MAX_Q" value="10000"/>
    <define name="SP_MAX_R" value="10000"/>
    <define name="DEADBAND_P" value="20"/>
    <define name="DEADBAND_Q" value="20"/>
    <define name="DEADBAND_R" value="200"/>
    <define name="REF_TAU" value="4"/>

    <!-- feedback -->
    <define name="GAIN_P" value="400"/>
    <define name="GAIN_Q" value="400"/>
    <define name="GAIN_R" value="350"/>

    <define name="IGAIN_P" value="75"/>
    <define name="IGAIN_Q" value="75"/>
    <define name="IGAIN_R" value="50"/>

    <!-- feedforward -->
    <define name="DDGAIN_P" value="300"/>
    <define name="DDGAIN_Q" value="300"/>
    <define name="DDGAIN_R" value="300"/>
  </section>

  <section name="STABILIZATION_ATTITUDE" prefix="STABILIZATION_ATTITUDE_">
    <!-- setpoints -->
    <define name="SP_MAX_PHI" value="45" unit="deg"/>
    <define name="SP_MAX_THETA" value="45" unit="deg"/>
    <define name="SP_MAX_R" value="300" unit="deg/s"/>
    <define name="DEADBAND_A" value="0"/>
    <define name="DEADBAND_E" value="0"/>
    <define name="DEADBAND_R" value="50"/>

    <!-- reference -->
    <define name="REF_OMEGA_P" value="450" unit="deg/s"/>
    <define name="REF_ZETA_P" value="0.9"/>
    <define name="REF_MAX_P" value="600." unit="deg/s"/>
    <define name="REF_MAX_PDOT" value="RadOfDeg(8000.)"/>

    <define name="REF_OMEGA_Q" value="450" unit="deg/s"/>
    <define name="REF_ZETA_Q" value="0.9"/>
    <define name="REF_MAX_Q" value="600." unit="deg/s"/>
    <define name="REF_MAX_QDOT" value="RadOfDeg(8000.)"/>

    <define name="REF_OMEGA_R" value="450" unit="deg/s"/>
    <define name="REF_ZETA_R" value="0.9"/>
    <define name="REF_MAX_R" value="600." unit="deg/s"/>
    <define name="REF_MAX_RDOT" value="RadOfDeg(8000.)"/>

    <!-- feedback -->
    <define name="PHI_PGAIN" value="650"/>
    <define name="PHI_DGAIN" value="300"/>
    <define name="PHI_IGAIN" value="0"/>

    <define name="THETA_PGAIN" value="650"/>
    <define name="THETA_DGAIN" value="300"/>
    <define name="THETA_IGAIN" value="0"/>

    <define name="PSI_PGAIN" value="300"/>
    <define name="PSI_DGAIN" value="250"/>
    <define name="PSI_IGAIN" value="0"/>

    <!-- feedforward -->
    <define name="PHI_DDGAIN" value="0"/>
    <define name="THETA_DDGAIN" value="0"/>
    <define name="PSI_DDGAIN" value="0"/>
  </section>

  <section name="GUIDANCE_V" prefix="GUIDANCE_V_">
    <define name="HOVER_KP" value="283"/>
    <define name="HOVER_KD" value="82"/>
    <define name="HOVER_KI" value="13"/>
    <define name="NOMINAL_HOVER_THROTTLE" value="0.655"/>
    <define name="ADAPT_THROTTLE_ENABLED" value="TRUE"/>
</section>

  <section name="GUIDANCE_H" prefix="GUIDANCE_H_">
    <define name="MAX_BANK" value="20" unit="deg"/>
    <define name="PGAIN" value="79"/>
    <define name="DGAIN" value="100"/>
    <define name="IGAIN" value="30"/>
  </section>
  <section name="SIMULATOR" prefix="NPS_">
    <define name="ACTUATOR_NAMES" value="nw_motor, ne_motor, se_motor, sw_motor" type="string[]"/>
    <define name="JSBSIM_MODEL" value="simple_x_quad_ccw" type="string"/>
    <define name="SENSORS_PARAMS" value="nps_sensors_params_default.h" type="string"/>
  </section>

  <section name="AUTOPILOT">
   <!-- <define name="MODE_STARTUP" value="AP_MODE_ATTITUDE_DIRECT"/>
    <define name="MODE_MANUAL" value="AP_MODE_ATTITUDE_DIRECT"/> 
    <define name="MODE_AUTO1" value="AP_MODE_ATTITUDE_DIRECT"/>
    <define name="MODE_AUTO2" value="AP_MODE_ATTITUDE_Z_HOLD"/>-->
    <!--  With External GPS with Magneto module -->
    <define name="MODE_STARTUP" value="AP_MODE_NAV"/>
    <define name="MODE_MANUAL" value="AP_MODE_ATTITUDE_DIRECT"/>
    <define name="MODE_AUTO1" value="AP_MODE_ATTITUDE_DIRECT"/>
    <define name="MODE_AUTO2" value="AP_MODE_NAV"/>
    
    <!--  AP_MODE_RC_DIRECT"/> -->
    <!-- AP_MODE_ATTITUDE_Z_HOLD -->
    
    <define name="USE_THROTTLE_FOR_MOTOR_ARMING" value="TRUE"/>
    <define name="NO_RC_THRUST_LIMIT" value="TRUE"/>
    <define name="ARRIVED_AT_WAYPOINT" value="0.15"/>
  </section>

  <section name="BAT">
    <define name="MILLIAMP_AT_IDLE_THROTTLE" value="200"/> <!-- TODO: Measure -->
    <define name="MILLIAMP_AT_FULL_THROTTLE" value="4000"/> <!-- TODO: Measure -->
    <define name="CATASTROPHIC_BAT_LEVEL" value="3.1" unit="V"/>
    <define name="CRITIC_BAT_LEVEL" value="3.3" unit="V"/>
    <define name="LOW_BAT_LEVEL" value="3.5" unit="V"/>
    <define name="MAX_BAT_LEVEL" value="4.2" unit="V"/>
  </section>
  
  <section name="GCS">
    <define name="SPEECH_NAME" value="Mambo"/>
    <define name="AC_ICON" value="quadrotor_x"/>
    <define name="ALT_SHIFT_PLUS_PLUS" value="2"/>
    <define name="ALT_SHIFT_PLUS" value="1"/> 
    <define name="ALT_SHIFT_MINUS" value="-1"/>
  </section>
  
  <section name="MISC">
      <!--UNLOCKED_HOME_MODE if set to TRUE means that HOME mode does not get stuck.
    If not set before when you would enter home mode you had to flip a bit via the GCS to get out. -->
    <define name="UNLOCKED_HOME_MODE" value="TRUE"/>
    <!-- RC_LOST_MODE means that if your RC Transmitter signal is not received anymore in the autopilot, e.g. you switch it off
    or  fly a long range mission you define the wanted mode behavior here.
    If you do not define it, it defaults to flying to the flightplan HOME -->
    <define name="RC_LOST_MODE" value="MODE_AUTO2"/>
   </section>
</airframe>
